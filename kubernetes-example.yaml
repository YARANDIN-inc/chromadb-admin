---
# Namespace
apiVersion: v1
kind: Namespace
metadata:
  name: chromadb-admin

---
# ConfigMap for non-sensitive configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: chromadb-admin-config
  namespace: chromadb-admin
data:
  CHROMADB_URL: "http://chromadb-service:8000"
  CREATE_INITIAL_ADMIN: "true"
  INITIAL_ADMIN_USERNAME: "admin"
  INITIAL_ADMIN_EMAIL: "admin@yourcompany.com"

---
# Secret for sensitive data
apiVersion: v1
kind: Secret
metadata:
  name: chromadb-admin-secrets
  namespace: chromadb-admin
type: Opaque
data:
  # Base64 encoded values - replace with your own
  POSTGRES_PASSWORD: "eW91ci1zZWN1cmUtcGFzc3dvcmQ="  # your-secure-password
  SECRET_KEY: "eW91ci1zdXBlci1zZWNyZXQta2V5LWhlcmU="      # your-super-secret-key-here
  INITIAL_ADMIN_PASSWORD: "Y2hhbmdlLXRoaXMtcGFzc3dvcmQ="  # change-this-password
  DATABASE_URL: "cG9zdGdyZXNxbDovL2Nocm9tYWRiOnlvdXItc2VjdXJlLXBhc3N3b3JkQHBvc3RncmVzLXNlcnZpY2U6NTQzMi9jaHJvbWFkYl9hZG1pbg=="

---
# PostgreSQL Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: chromadb-admin
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:15-alpine
        env:
        - name: POSTGRES_DB
          value: "chromadb_admin"
        - name: POSTGRES_USER
          value: "chromadb"
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: chromadb-admin-secrets
              key: POSTGRES_PASSWORD
        ports:
        - containerPort: 5432
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - chromadb
            - -d
            - chromadb_admin
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - chromadb
            - -d
            - chromadb_admin
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: postgres-storage
        persistentVolumeClaim:
          claimName: postgres-pvc

---
# PostgreSQL Service
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  namespace: chromadb-admin
spec:
  selector:
    app: postgres
  ports:
  - port: 5432
    targetPort: 5432

---
# PostgreSQL PVC
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: chromadb-admin
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi

---
# ChromaDB Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: chromadb
  namespace: chromadb-admin
spec:
  replicas: 1
  selector:
    matchLabels:
      app: chromadb
  template:
    metadata:
      labels:
        app: chromadb
    spec:
      containers:
      - name: chromadb
        image: chromadb/chroma:1.0.12
        env:
        - name: CHROMA_SERVER_HOST
          value: "0.0.0.0"
        - name: CHROMA_SERVER_HTTP_PORT
          value: "8000"
        - name: ANONYMIZED_TELEMETRY
          value: "False"
        ports:
        - containerPort: 8000
        volumeMounts:
        - name: chromadb-storage
          mountPath: /chroma/chroma
        livenessProbe:
          httpGet:
            path: /api/v1/heartbeat
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /api/v1/heartbeat
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: chromadb-storage
        persistentVolumeClaim:
          claimName: chromadb-pvc

---
# ChromaDB Service
apiVersion: v1
kind: Service
metadata:
  name: chromadb-service
  namespace: chromadb-admin
spec:
  selector:
    app: chromadb
  ports:
  - port: 8000
    targetPort: 8000

---
# ChromaDB PVC
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: chromadb-pvc
  namespace: chromadb-admin
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi

---
# Web Application Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: chromadb-admin-web
  namespace: chromadb-admin
spec:
  replicas: 3
  selector:
    matchLabels:
      app: chromadb-admin-web
  template:
    metadata:
      labels:
        app: chromadb-admin-web
    spec:
      containers:
      - name: web
        image: chromadb-admin:latest  # Replace with your actual image
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: chromadb-admin-secrets
              key: DATABASE_URL
        - name: CHROMADB_URL
          valueFrom:
            configMapKeyRef:
              name: chromadb-admin-config
              key: CHROMADB_URL
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: chromadb-admin-secrets
              key: SECRET_KEY
        - name: CREATE_INITIAL_ADMIN
          valueFrom:
            configMapKeyRef:
              name: chromadb-admin-config
              key: CREATE_INITIAL_ADMIN
        - name: INITIAL_ADMIN_USERNAME
          valueFrom:
            configMapKeyRef:
              name: chromadb-admin-config
              key: INITIAL_ADMIN_USERNAME
        - name: INITIAL_ADMIN_EMAIL
          valueFrom:
            configMapKeyRef:
              name: chromadb-admin-config
              key: INITIAL_ADMIN_EMAIL
        - name: INITIAL_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: chromadb-admin-secrets
              key: INITIAL_ADMIN_PASSWORD
        ports:
        - containerPort: 8080
        livenessProbe:
          httpGet:
            path: /auth/login
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /auth/login
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 250m
            memory: 256Mi

---
# Web Application Service
apiVersion: v1
kind: Service
metadata:
  name: chromadb-admin-web-service
  namespace: chromadb-admin
spec:
  selector:
    app: chromadb-admin-web
  ports:
  - port: 80
    targetPort: 8080
  type: LoadBalancer  # Change to ClusterIP if using Ingress

---
# Optional: Ingress for external access
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: chromadb-admin-ingress
  namespace: chromadb-admin
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    cert-manager.io/cluster-issuer: letsencrypt-prod  # If using cert-manager
spec:
  tls:
  - hosts:
    - chromadb-admin.yourcompany.com
    secretName: chromadb-admin-tls
  rules:
  - host: chromadb-admin.yourcompany.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: chromadb-admin-web-service
            port:
              number: 80 