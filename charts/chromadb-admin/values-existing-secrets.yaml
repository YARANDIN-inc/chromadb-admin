# Example values for using existing secrets
# This file demonstrates how to configure chromadb-admin to use an existing Kubernetes secret
# instead of creating new ones with sensitive values in values.yaml

chromadbAdmin:
  config:
    # External service URLs (required when internal services are disabled)
    databaseUrl: ""  # Will be read from existing secret
    chromadbUrl: "http://external-chromadb:8000"  # External ChromaDB instance
    
    # Use existing secret instead of creating new ones
    # When enabled, all sensitive environment variables will be loaded from the specified secret
    existingSecret:
      enabled: true
      # Name of the existing secret containing environment variables
      # The secret should contain keys like: SECRET_KEY, DATABASE_URL, CHROMADB_TOKEN, INITIAL_ADMIN_PASSWORD, etc.
      secretName: "chromadb-admin-secrets"
    
    # Initial admin configuration (non-sensitive values can still be set here)
    initialAdmin:
      enabled: true
      username: "admin"
      email: "admin@example.com"
      # password will be read from the existing secret (INITIAL_ADMIN_PASSWORD key)

# Disable internal PostgreSQL if using external database
postgresql:
  enabled: false

# Disable internal ChromaDB if using external ChromaDB
chromadb:
  enabled: false

# Example of how to create the required secret:
#
# kubectl create secret generic chromadb-admin-secrets \
#   --from-literal=SECRET_KEY="your-secret-key-here" \
#   --from-literal=DATABASE_URL="postgresql://user:password@external-postgres:5432/database" \
#   --from-literal=CHROMADB_TOKEN="your-chromadb-token" \
#   --from-literal=INITIAL_ADMIN_PASSWORD="your-admin-password"
#
# The secret can contain any environment variables that the application expects.
# Only include the variables you want to override - others will use default values. 